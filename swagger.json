{
   "openapi":"3.0.1",
   "info":{
      "title":"ezee\\roofdata",
      "description":"Last changed: 2022-01-18T04:32:06+00:00",
      "version":"1.3.1",
      "x-logo":{
         "url":"ezeeroofdataClient",
         "altText":"ezee\\roofdata"
      }
   },
   "paths":{
      "/allocations/{allocationId}/":{
         "get":{
            "tags":[
               "Allocation"
            ],
            "summary":"Finds Allocations by ID",
            "description":"Returns Allocations based on ID",
            "operationId":"getByIdAllocationAllocation",
            "parameters":[
               {
                  "name":"allocationId",
                  "in":"path",
                  "description":"ID of the Allocation",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               }
            ],
            "responses":{
               "default":{
                  "description":"Unexpected error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Error"
                        }
                     }
                  }
               },
               "200":{
                  "description":"The Allocation object",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/allocation.Allocation"
                        }
                     }
                  }
               },
               "404":{
                  "description":"A object with the submitted ID does not exist!"
               }
            }
         },
         "put":{
            "tags":[
               "Allocation"
            ],
            "summary":"Update the Allocation",
            "description":"Updates an existing Allocation",
            "operationId":"updateAllocationAllocation",
            "parameters":[
               {
                  "name":"allocationId",
                  "in":"path",
                  "description":"Id of the 1458 that should be updated.",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               }
            ],
            "requestBody":{
               "description":"Body containing the modified data.",
               "content":{
                  "application/json":{
                     "schema":{
                        "$ref":"#/components/schemas/allocation.Allocation"
                     }
                  }
               }
            },
            "responses":{
               "default":{
                  "description":"Unexpected error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Error"
                        }
                     }
                  }
               },
               "200":{
                  "description":"The updated model",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/allocation.Allocation"
                        }
                     }
                  }
               },
               "404":{
                  "description":"The requested object could not be found by the submitted id."
               },
               "422":{
                  "description":"On or many fields contains a invalid value."
               }
            }
         },
         "delete":{
            "tags":[
               "Allocation"
            ],
            "summary":"Delete Allocation by id.",
            "description":"Deletes one specific Allocation.",
            "operationId":"removeAllocationAllocation",
            "parameters":[
               {
                  "name":"allocationId",
                  "in":"path",
                  "description":"ID of Allocation that should be deleted.",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               }
            ],
            "responses":{
               "default":{
                  "description":"Unexpected error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Error"
                        }
                     }
                  }
               }
            }
         }
      },
      "/allocations/{allocationId}/sketch/":{
         "post":{
            "tags":[
               "Allocation"
            ],
            "summary":"",
            "description":"",
            "operationId":"uploadSketchAllocationAllocation",
            "parameters":[
               {
                  "name":"allocationId",
                  "in":"path",
                  "description":"allocationId",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               }
            ],
            "responses":{
               "default":{
                  "description":"Unexpected error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Error"
                        }
                     }
                  }
               },
               "200":{
                  "description":"Object of allocation",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/allocation.Allocation"
                        }
                     }
                  }
               },
               "404":{
                  "description":"not found"
               }
            }
         }
      },
      "/allocations/{id}/image-and-map-image/":{
         "put":{
            "tags":[
               "Allocation"
            ],
            "summary":"Updates an allocation with an image and map image",
            "description":"Updates an allocation with an image and map image",
            "operationId":"updateAllocationWithImagesAllocationAllocation",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The id of the allocation",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               }
            ],
            "responses":{
               "default":{
                  "description":"Unexpected error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Error"
                        }
                     }
                  }
               },
               "200":{
                  "description":"",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/allocation.Allocation"
                        }
                     }
                  }
               }
            }
         }
      },
      "/projects/{projectId}/allocations/":{
         "get":{
            "tags":[
               "Allocation"
            ],
            "summary":"Get all Allocations by project",
            "description":"Returns all Allocations from the system that the user has access to. The Headers will include TotalElements, TotalPages, CurrentPage and PerPage to help with Pagination.",
            "operationId":"getAllByProjectAllocationAllocation",
            "parameters":[
               {
                  "name":"maxResults",
                  "in":"query",
                  "description":"Number of results that should be returned.",
                  "required":false,
                  "schema":{
                     "type":"integer",
                     "format":"int32",
                     "default":100
                  }
               },
               {
                  "name":"page",
                  "in":"query",
                  "description":"Current Page number",
                  "required":false,
                  "schema":{
                     "type":"integer",
                     "format":"int32",
                     "default":0
                  }
               },
               {
                  "name":"projectId",
                  "in":"path",
                  "description":"The ID of the Project the Allocations belong to",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               }
            ],
            "responses":{
               "default":{
                  "description":"Unexpected error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Error"
                        }
                     }
                  }
               },
               "200":{
                  "description":"List of Allocations",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"array",
                           "nullable":false,
                           "items":{
                              "$ref":"#/components/schemas/allocation.Allocation"
                           }
                        }
                     }
                  }
               }
            }
         },
         "post":{
            "tags":[
               "Allocation"
            ],
            "summary":"",
            "description":"",
            "operationId":"createAllocationAllocation",
            "parameters":[
               {
                  "name":"isDrawn",
                  "in":"query",
                  "description":"if this is true. \nvalidate AllocationCoordinates and borderCoordinates are not empty or null",
                  "required":true,
                  "schema":{
                     "type":"boolean",
                     "default":true
                  }
               },
               {
                  "name":"projectId",
                  "in":"path",
                  "description":"",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               }
            ],
            "requestBody":{
               "description":"",
               "content":{
                  "application/json":{
                     "schema":{
                        "$ref":"#/components/schemas/allocation.Allocation"
                     }
                  }
               }
            },
            "responses":{
               "default":{
                  "description":"Unexpected error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Error"
                        }
                     }
                  }
               },
               "201":{
                  "description":"The created Allocation",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/allocation.Allocation"
                        }
                     }
                  }
               }
            }
         }
      },
      "/projects/{projectId}/allocations-exist/":{
         "get":{
            "tags":[
               "Allocation"
            ],
            "summary":"Finds allocation Existences by project ID",
            "description":"Returns allocation Existences by project ID",
            "operationId":"allocationsExistByProjectIdAllocationAllocation",
            "parameters":[
               {
                  "name":"projectId",
                  "in":"path",
                  "description":"projectId of the allocation",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               }
            ],
            "responses":{
               "default":{
                  "description":"Unexpected error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Error"
                        }
                     }
                  }
               },
               "200":{
                  "description":"returns true when the cable exists on the projectId given"
               }
            }
         }
      },
      "/projects/allocation-existence/":{
         "post":{
            "tags":[
               "Allocation"
            ],
            "summary":"",
            "description":"",
            "operationId":"getExistenceOfAllocationsInProjectsAllocationExistence",
            "parameters":[
               
            ],
            "responses":{
               "default":{
                  "description":"Unexpected error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Error"
                        }
                     }
                  }
               },
               "200":{
                  "description":"",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"array",
                           "nullable":false,
                           "items":{
                              "$ref":"#/components/schemas/allocation.Existence"
                           }
                        }
                     }
                  }
               }
            }
         }
      },
      "/allocations/{id}/images/":{
         "post":{
            "tags":[
               "Allocation"
            ],
            "summary":"Create Image",
            "description":"Creates a new Image object",
            "operationId":"createAllocationImage",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"allocation id",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               }
            ],
            "responses":{
               "default":{
                  "description":"Unexpected error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Error"
                        }
                     }
                  }
               },
               "201":{
                  "description":"",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/allocation.Image"
                        }
                     }
                  }
               },
               "404":{
                  "description":"allocation not found"
               }
            }
         }
      },
      "/images/{id}/":{
         "delete":{
            "tags":[
               "Allocation"
            ],
            "summary":"Delete Image by id.",
            "description":"Deletes one specific Image.",
            "operationId":"removeAllocationImage",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"ID of Image that should be deleted.",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               }
            ],
            "responses":{
               "default":{
                  "description":"Unexpected error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Error"
                        }
                     }
                  }
               },
               "200":{
                  "description":"success"
               },
               "404":{
                  "description":"not found"
               }
            }
         }
      },
      "/allocations/{allocationId}/map-image/":{
         "post":{
            "tags":[
               "Allocation"
            ],
            "summary":"",
            "description":"",
            "operationId":"createAllocationMapImage",
            "parameters":[
               {
                  "name":"allocationId",
                  "in":"path",
                  "description":"allocation id",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               }
            ],
            "responses":{
               "default":{
                  "description":"Unexpected error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Error"
                        }
                     }
                  }
               },
               "201":{
                  "description":"object of map-image",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/allocation.MapImage"
                        }
                     }
                  }
               },
               "404":{
                  "description":"not found"
               }
            }
         }
      },
      "/map-images/{id}/":{
         "delete":{
            "tags":[
               "Allocation"
            ],
            "summary":"Delete MapImage by id.",
            "description":"Deletes one specific MapImage.",
            "operationId":"removeAllocationMapImage",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"ID of MapImage that should be deleted.",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               }
            ],
            "responses":{
               "default":{
                  "description":"Unexpected error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Error"
                        }
                     }
                  }
               },
               "404":{
                  "description":"not found"
               },
               "200":{
                  "description":"success"
               }
            }
         }
      },
      "/allocations/{id}/plan/":{
         "post":{
            "tags":[
               "Allocation"
            ],
            "summary":"Create Plan for Allocation.",
            "description":"Create Plan for Allocation.",
            "operationId":"createAllocationPlanAllocationPlan",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"ID of Allocation",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               }
            ],
            "responses":{
               "default":{
                  "description":"Unexpected error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Error"
                        }
                     }
                  }
               },
               "201":{
                  "description":"Object of Plan",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/allocation.Plan"
                        }
                     }
                  }
               },
               "404":{
                  "description":"Not found"
               }
            }
         }
      },
      "/allocations/{id}/plans/":{
         "get":{
            "tags":[
               "Allocation"
            ],
            "summary":"Find by Allocation",
            "description":"Finds Plans by the parent Allocation id",
            "operationId":"getByAllocationAllocationPlan",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"ID of Allocation",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               },
               {
                  "name":"maxResults",
                  "in":"query",
                  "description":"Number of results that should be retuned.",
                  "required":false,
                  "schema":{
                     "type":"integer",
                     "format":"int32",
                     "default":100
                  }
               },
               {
                  "name":"page",
                  "in":"query",
                  "description":"The current page number",
                  "required":false,
                  "schema":{
                     "type":"integer",
                     "format":"int32",
                     "default":0
                  }
               }
            ],
            "responses":{
               "default":{
                  "description":"Unexpected error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Error"
                        }
                     }
                  }
               },
               "200":{
                  "description":"List of Plans items",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"array",
                           "nullable":false,
                           "items":{
                              "$ref":"#/components/schemas/allocation.Plan"
                           }
                        }
                     }
                  }
               }
            }
         }
      },
      "/plans/{id}/":{
         "delete":{
            "tags":[
               "Allocation"
            ],
            "summary":"Delete Plan by id.",
            "description":"Deletes one specific Plan.",
            "operationId":"removeAllocationPlan",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"ID of Plan that should be deleted.",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               }
            ],
            "responses":{
               "default":{
                  "description":"Unexpected error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Error"
                        }
                     }
                  }
               }
            }
         }
      },
      "/projects/{id}/plans/":{
         "get":{
            "tags":[
               "Allocation"
            ],
            "summary":"Get all Roof plans by Project",
            "description":"Get all Roof plans by Project",
            "operationId":"getPlansByProjectAllocationPlan",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The id of the Project",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               },
               {
                  "name":"maxResults",
                  "in":"query",
                  "description":"The max results per page",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"page",
                  "in":"query",
                  "description":"The current page",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "default":{
                  "description":"Unexpected error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Error"
                        }
                     }
                  }
               },
               "200":{
                  "description":"The Allocation Plans of the project",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"array",
                           "nullable":false,
                           "items":{
                              "$ref":"#/components/schemas/allocation.Plan"
                           }
                        }
                     }
                  }
               }
            }
         }
      },
      "/allocations/{allocationId}/synchronize-zones/":{
         "put":{
            "tags":[
               "Allocation"
            ],
            "summary":"",
            "description":"",
            "operationId":"synchronizeZonesAllocationZone",
            "parameters":[
               {
                  "name":"allocationId",
                  "in":"path",
                  "description":"id of the allocation",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               }
            ],
            "requestBody":{
               "description":"list of zone of the allocation",
               "content":{
                  "application/json":{
                     "schema":{
                        "$ref":"#/components/schemas/allocation.Zone"
                     }
                  }
               }
            },
            "responses":{
               "default":{
                  "description":"Unexpected error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Error"
                        }
                     }
                  }
               },
               "200":{
                  "description":"",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"array",
                           "nullable":false,
                           "items":{
                              "$ref":"#/components/schemas/allocation.Zone"
                           }
                        }
                     }
                  }
               }
            }
         }
      },
      "/allocations/{allocationId}/zones/":{
         "get":{
            "tags":[
               "Allocation"
            ],
            "summary":"Find by Allocation",
            "description":"Finds Zones by the parent Allocation id",
            "operationId":"getAllByAllocationAllocationZone",
            "parameters":[
               {
                  "name":"allocationId",
                  "in":"path",
                  "description":"ID of Allocation",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               },
               {
                  "name":"maxResults",
                  "in":"query",
                  "description":"Number of results that should be retuned.",
                  "required":false,
                  "schema":{
                     "type":"integer",
                     "format":"int32",
                     "default":100
                  }
               },
               {
                  "name":"page",
                  "in":"query",
                  "description":"Current Page number",
                  "required":false,
                  "schema":{
                     "type":"integer",
                     "format":"int32",
                     "default":0
                  }
               }
            ],
            "responses":{
               "default":{
                  "description":"Unexpected error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Error"
                        }
                     }
                  }
               },
               "200":{
                  "description":"List of Zones items",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"array",
                           "nullable":false,
                           "items":{
                              "$ref":"#/components/schemas/allocation.Zone"
                           }
                        }
                     }
                  }
               }
            }
         },
         "post":{
            "tags":[
               "Allocation"
            ],
            "summary":"Create Zone",
            "description":"Creates a new Zone object",
            "operationId":"createAllocationZone",
            "parameters":[
               {
                  "name":"allocationId",
                  "in":"path",
                  "description":"",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               }
            ],
            "requestBody":{
               "description":"The object data",
               "content":{
                  "application/json":{
                     "schema":{
                        "$ref":"#/components/schemas/allocation.Zone"
                     }
                  }
               }
            },
            "responses":{
               "default":{
                  "description":"Unexpected error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Error"
                        }
                     }
                  }
               },
               "201":{
                  "description":"The created Zone",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/allocation.Zone"
                        }
                     }
                  }
               }
            }
         }
      },
      "/zones/{zoneId}/":{
         "get":{
            "tags":[
               "Allocation"
            ],
            "summary":"Finds Zones by ID",
            "description":"Returns Zones based on ID",
            "operationId":"getByIdAllocationZone",
            "parameters":[
               {
                  "name":"zoneId",
                  "in":"path",
                  "description":"ID of the Zone",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               }
            ],
            "responses":{
               "default":{
                  "description":"Unexpected error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Error"
                        }
                     }
                  }
               },
               "200":{
                  "description":"The Zone object",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/allocation.Zone"
                        }
                     }
                  }
               },
               "404":{
                  "description":"A object with the submitted ID does not exist!"
               }
            }
         },
         "put":{
            "tags":[
               "Allocation"
            ],
            "summary":"Update the Zone",
            "description":"Updates an existing Zone",
            "operationId":"updateAllocationZone",
            "parameters":[
               {
                  "name":"zoneId",
                  "in":"path",
                  "description":"Id of the 1463 that should be updated.",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               }
            ],
            "requestBody":{
               "description":"Body containing the modified data.",
               "content":{
                  "application/json":{
                     "schema":{
                        "$ref":"#/components/schemas/allocation.Zone"
                     }
                  }
               }
            },
            "responses":{
               "default":{
                  "description":"Unexpected error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Error"
                        }
                     }
                  }
               },
               "200":{
                  "description":"The updated model",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/allocation.Zone"
                        }
                     }
                  }
               },
               "404":{
                  "description":"The requested object could not be found by the submitted id."
               },
               "422":{
                  "description":"On or many fields contains a invalid value."
               }
            }
         },
         "delete":{
            "tags":[
               "Allocation"
            ],
            "summary":"Delete Zone by id.",
            "description":"Deletes one specific Zone.",
            "operationId":"removeAllocationZone",
            "parameters":[
               {
                  "name":"zoneId",
                  "in":"path",
                  "description":"ID of Zone that should be deleted.",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               }
            ],
            "responses":{
               "default":{
                  "description":"Unexpected error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Error"
                        }
                     }
                  }
               }
            }
         }
      },
      "/external-info-roofs/":{
         "post":{
            "tags":[
               "Externalinfo"
            ],
            "summary":"Get all roof data required for projects",
            "description":"Returns all roof data required for projects from the system that the user has access to.",
            "operationId":"roofDataInfoByProjectIdsExternalinfoRoof",
            "parameters":[
               
            ],
            "responses":{
               "default":{
                  "description":"Unexpected error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Error"
                        }
                     }
                  }
               },
               "200":{
                  "description":"List of external info per project",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"array",
                           "nullable":false,
                           "items":{
                              "$ref":"#/components/schemas/externalinfo.Roof"
                           }
                        }
                     }
                  }
               }
            }
         }
      },
      "/roof-area/generate-zones/":{
         "post":{
            "tags":[
               "Generator"
            ],
            "summary":"",
            "description":"",
            "operationId":"generateZonesGeneratorRoofArea",
            "parameters":[
               
            ],
            "requestBody":{
               "description":"",
               "content":{
                  "application/json":{
                     "schema":{
                        "$ref":"#/components/schemas/generator.RoofArea"
                     }
                  }
               }
            },
            "responses":{
               "default":{
                  "description":"Unexpected error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Error"
                        }
                     }
                  }
               },
               "202":{
                  "description":"roof area with number of modules depending on its area",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"array",
                           "nullable":false,
                           "items":{
                              "$ref":"#/components/schemas/generator.RoofArea"
                           }
                        }
                     }
                  }
               }
            }
         }
      },
      "/validation/borders/":{
         "post":{
            "tags":[
               "Generator"
            ],
            "summary":"Validates an AllocationAllocation roof border and the borders of its AllocationZones",
            "description":"",
            "operationId":"validateAllocationBordersGeneratorValidation",
            "parameters":[
               
            ],
            "requestBody":{
               "description":"",
               "content":{
                  "application/json":{
                     "schema":{
                        "$ref":"#/components/schemas/allocation.Allocation"
                     }
                  }
               }
            },
            "responses":{
               "default":{
                  "description":"Unexpected error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Error"
                        }
                     }
                  }
               },
               "200":{
                  "description":"The AllocationAllocation is valid",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/generator.Validation"
                        }
                     }
                  }
               },
               "400":{
                  "description":"The AllocationAllocation data was not valid"
               }
            }
         }
      },
      "/validation/generate-flat-zones-2/":{
         "post":{
            "tags":[
               "Generator"
            ],
            "summary":"Returns an AllocationAllocation with new usable Zones for flat roof types",
            "description":"Returns an AllocationAllocation with new usable Zones for flat roof types",
            "operationId":"generateFlatRoofZones2GeneratorValidation",
            "parameters":[
               
            ],
            "requestBody":{
               "description":"The allocation and orientation used to generate zones",
               "content":{
                  "application/json":{
                     "schema":{
                        "$ref":"#/components/schemas/generator.ZoneInput"
                     }
                  }
               }
            },
            "responses":{
               "default":{
                  "description":"Unexpected error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Error"
                        }
                     }
                  }
               },
               "200":{
                  "description":"The AllocationAllocation with generated zones",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/generator.Validation"
                        }
                     }
                  }
               },
               "400":{
                  "description":"The Allocation was not valid to generate zones for"
               }
            }
         }
      },
      "/validation/generate-roof-zones-manually/":{
         "post":{
            "tags":[
               "Generator"
            ],
            "summary":"Returns an AllocationAllocation with new usable Zones from a user drawn rect",
            "description":"",
            "operationId":"generateRoofZonesManuallyGeneratorValidation",
            "parameters":[
               
            ],
            "requestBody":{
               "description":"",
               "content":{
                  "application/json":{
                     "schema":{
                        "$ref":"#/components/schemas/generator.Validation"
                     }
                  }
               }
            },
            "responses":{
               "default":{
                  "description":"Unexpected error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Error"
                        }
                     }
                  }
               },
               "200":{
                  "description":"The AllocationAllocation with generated zones",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/generator.Validation"
                        }
                     }
                  }
               },
               "400":{
                  "description":"The AllocationAllocation was not valid to generate zones for"
               }
            }
         }
      },
      "/validation/generate-slanted-zones/":{
         "post":{
            "tags":[
               "Generator"
            ],
            "summary":"Returns an Allocation with new usable Zones specifically for slanted roofs",
            "description":"",
            "operationId":"generateSlantedRoofZonesGeneratorValidation",
            "parameters":[
               
            ],
            "requestBody":{
               "description":"The allocation and orientation used to generate zones",
               "content":{
                  "application/json":{
                     "schema":{
                        "$ref":"#/components/schemas/generator.ZoneInput"
                     }
                  }
               }
            },
            "responses":{
               "default":{
                  "description":"Unexpected error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Error"
                        }
                     }
                  }
               },
               "200":{
                  "description":"The AllocationAllocation with generated zones",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/generator.Validation"
                        }
                     }
                  }
               },
               "400":{
                  "description":"The AllocationAllocation was not valid to generate zones for"
               }
            }
         }
      },
      "/reports/":{
         "put":{
            "tags":[
               "Report"
            ],
            "summary":"Update the Report",
            "description":"Updates an existing Report",
            "operationId":"updateReportReport",
            "parameters":[
               
            ],
            "requestBody":{
               "description":"Body containing the modified data.",
               "content":{
                  "application/json":{
                     "schema":{
                        "$ref":"#/components/schemas/report.Report"
                     }
                  }
               }
            },
            "responses":{
               "default":{
                  "description":"Unexpected error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Error"
                        }
                     }
                  }
               },
               "200":{
                  "description":"The updated model",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/report.Report"
                        }
                     }
                  }
               },
               "404":{
                  "description":"The requested object could not be found by the submitted id."
               },
               "422":{
                  "description":"On or many fields contains a invalid value."
               }
            }
         },
         "delete":{
            "tags":[
               "Report"
            ],
            "summary":"Delete Report by batch ids",
            "description":"Delete specific Reports.",
            "operationId":"removeReportReport",
            "parameters":[
               
            ],
            "responses":{
               "default":{
                  "description":"Unexpected error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Error"
                        }
                     }
                  }
               }
            }
         }
      },
      "/roof-assessments/{id}/reports/":{
         "get":{
            "tags":[
               "Report"
            ],
            "summary":"",
            "description":"",
            "operationId":"getByRoofAssessmentReportReport",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"id of the roofAssement",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               }
            ],
            "responses":{
               "default":{
                  "description":"Unexpected error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Error"
                        }
                     }
                  }
               },
               "200":{
                  "description":"",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"array",
                           "nullable":false,
                           "items":{
                              "$ref":"#/components/schemas/report.Report"
                           }
                        }
                     }
                  }
               }
            }
         },
         "post":{
            "tags":[
               "Report"
            ],
            "summary":"",
            "description":"",
            "operationId":"createReportReport",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"id of the roofAssessment",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               }
            ],
            "requestBody":{
               "description":"report objects",
               "content":{
                  "application/json":{
                     "schema":{
                        "$ref":"#/components/schemas/report.Report"
                     }
                  }
               }
            },
            "responses":{
               "default":{
                  "description":"Unexpected error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Error"
                        }
                     }
                  }
               },
               "200":{
                  "description":"created report objects",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"array",
                           "nullable":false,
                           "items":{
                              "$ref":"#/components/schemas/report.Report"
                           }
                        }
                     }
                  }
               }
            }
         }
      },
      "/allocations/{allocationId}/roof-assessment/":{
         "post":{
            "tags":[
               "Roof"
            ],
            "summary":"Create RoofAssessment",
            "description":"Creates a new RoofAssessment object",
            "operationId":"createRoofAssessment",
            "parameters":[
               {
                  "name":"allocationId",
                  "in":"path",
                  "description":"",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               }
            ],
            "requestBody":{
               "description":"The object data",
               "content":{
                  "application/json":{
                     "schema":{
                        "$ref":"#/components/schemas/roof.Assessment"
                     }
                  }
               }
            },
            "responses":{
               "default":{
                  "description":"Unexpected error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Error"
                        }
                     }
                  }
               },
               "201":{
                  "description":"The created RoofAssessment",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/roof.Assessment"
                        }
                     }
                  }
               }
            }
         }
      },
      "/allocations/{id}/roof-assessment/":{
         "get":{
            "tags":[
               "Roof"
            ],
            "summary":"Provides the assessment of an allocation.",
            "description":"Provides the assessment of an allocation.",
            "operationId":"getByAllocationRoofAssessment",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"allocation id",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               }
            ],
            "responses":{
               "default":{
                  "description":"Unexpected error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Error"
                        }
                     }
                  }
               },
               "200":{
                  "description":"object of roof-assessment",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/roof.Assessment"
                        }
                     }
                  }
               }
            }
         }
      },
      "/roof-assessment/{roofAssessmentId}/":{
         "put":{
            "tags":[
               "Roof"
            ],
            "summary":"Update the RoofAssessment",
            "description":"Updates an existing RoofAssessment",
            "operationId":"updateRoofAssessment",
            "parameters":[
               {
                  "name":"roofAssessmentId",
                  "in":"path",
                  "description":"Id of the 1461 that should be updated.",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               }
            ],
            "requestBody":{
               "description":"Body containing the modified data.",
               "content":{
                  "application/json":{
                     "schema":{
                        "$ref":"#/components/schemas/roof.Assessment"
                     }
                  }
               }
            },
            "responses":{
               "default":{
                  "description":"Unexpected error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Error"
                        }
                     }
                  }
               },
               "200":{
                  "description":"The updated model",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/roof.Assessment"
                        }
                     }
                  }
               },
               "404":{
                  "description":"The requested object could not be found by the submitted id."
               },
               "422":{
                  "description":"On or many fields contains a invalid value."
               }
            }
         },
         "delete":{
            "tags":[
               "Roof"
            ],
            "summary":"Delete RoofAssessment by id.",
            "description":"Deletes one specific RoofAssessment.",
            "operationId":"removeRoofAssessment",
            "parameters":[
               {
                  "name":"roofAssessmentId",
                  "in":"path",
                  "description":"ID of RoofAssessment that should be deleted.",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               }
            ],
            "responses":{
               "default":{
                  "description":"Unexpected error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Error"
                        }
                     }
                  }
               }
            }
         }
      },
      "/roof-assessments/{id}/":{
         "get":{
            "tags":[
               "Roof"
            ],
            "summary":"Finds RoofAssessments by ID",
            "description":"Returns RoofAssessments based on ID",
            "operationId":"getByIdRoofAssessment",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"ID of the RoofAssessment",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               }
            ],
            "responses":{
               "default":{
                  "description":"Unexpected error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Error"
                        }
                     }
                  }
               },
               "200":{
                  "description":"The RoofAssessment object",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/roof.Assessment"
                        }
                     }
                  }
               },
               "404":{
                  "description":"A object with the submitted ID does not exist!"
               }
            }
         }
      },
      "/allocations/{id}/assessment-images/":{
         "get":{
            "tags":[
               "Roof"
            ],
            "summary":"Find by Allocation",
            "description":"Finds AssessmentImages by the parent Allocation id",
            "operationId":"getByAllocationRoofAssessmentImage",
            "parameters":[
               {
                  "name":"category",
                  "in":"query",
                  "description":"query param for category of assessmentImages",
                  "required":false,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"id",
                  "in":"path",
                  "description":"ID of Allocation",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               },
               {
                  "name":"maxResults",
                  "in":"query",
                  "description":"Number of results that should be retuned.",
                  "required":false,
                  "schema":{
                     "type":"integer",
                     "format":"int32",
                     "default":100
                  }
               },
               {
                  "name":"page",
                  "in":"query",
                  "description":"page",
                  "required":false,
                  "schema":{
                     "type":"integer",
                     "format":"int32",
                     "default":0
                  }
               }
            ],
            "responses":{
               "default":{
                  "description":"Unexpected error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Error"
                        }
                     }
                  }
               },
               "200":{
                  "description":"List of AssessmentImages items",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"array",
                           "nullable":false,
                           "items":{
                              "$ref":"#/components/schemas/roof.AssessmentImage"
                           }
                        }
                     }
                  }
               }
            }
         },
         "post":{
            "tags":[
               "Roof"
            ],
            "summary":"Creates a new assessment-image.",
            "description":"Creates a new assessment-image.",
            "operationId":"createRoofAssessmentImage",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"Allocation id",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               }
            ],
            "responses":{
               "default":{
                  "description":"Unexpected error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Error"
                        }
                     }
                  }
               },
               "201":{
                  "description":"object of assessment",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/roof.AssessmentImage"
                        }
                     }
                  }
               },
               "404":{
                  "description":"not found"
               }
            }
         }
      },
      "/assessment-images/{id}/":{
         "put":{
            "tags":[
               "Roof"
            ],
            "summary":"updates the roof assessment image with overlayUrl",
            "description":"",
            "operationId":"updateWithOverlayRoofAssessmentImage",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"roof assessment image id",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               }
            ],
            "responses":{
               "default":{
                  "description":"Unexpected error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Error"
                        }
                     }
                  }
               },
               "200":{
                  "description":"",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/roof.AssessmentImage"
                        }
                     }
                  }
               },
               "404":{
                  "description":"roofAssessmentImage id does not exist"
               }
            }
         },
         "delete":{
            "tags":[
               "Roof"
            ],
            "summary":"Delete AssessmentImage by id.",
            "description":"Deletes one specific AssessmentImage.",
            "operationId":"removeRoofAssessmentImage",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"ID of AssessmentImage that should be deleted.",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               }
            ],
            "responses":{
               "default":{
                  "description":"Unexpected error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Error"
                        }
                     }
                  }
               }
            }
         }
      },
      "/allocations/{id}/roof-assessment-pin-images/":{
         "get":{
            "tags":[
               "Roof"
            ],
            "summary":"Find by Allocation",
            "description":"Finds AssessmentPinImages by the parent Allocation id",
            "operationId":"getByAllocationRoofAssessmentPinImage",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"ID of Allocation",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               },
               {
                  "name":"maxResults",
                  "in":"query",
                  "description":"Number of results that should be returned.",
                  "required":false,
                  "schema":{
                     "type":"integer",
                     "format":"int32",
                     "default":100
                  }
               },
               {
                  "name":"page",
                  "in":"query",
                  "description":"Get results from this Page",
                  "required":false,
                  "schema":{
                     "type":"integer",
                     "format":"int32",
                     "default":0
                  }
               }
            ],
            "responses":{
               "default":{
                  "description":"Unexpected error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Error"
                        }
                     }
                  }
               },
               "200":{
                  "description":"List of AssessmentPinImages items",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"array",
                           "nullable":false,
                           "items":{
                              "$ref":"#/components/schemas/roof.AssessmentPinImage"
                           }
                        }
                     }
                  }
               }
            }
         },
         "post":{
            "tags":[
               "Roof"
            ],
            "summary":"create roof assessment pin images",
            "description":"",
            "operationId":"createRoofAssessmentPinImage",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"allocation id",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               }
            ],
            "requestBody":{
               "description":"",
               "content":{
                  "multipart/form-data":{
                     "schema":{
                        "type":"object",
                        "properties":{
                           "body":{
                              "$ref":"#/components/schemas/roof.AssessmentPinImage"
                           }
                        }
                     }
                  }
               }
            },
            "responses":{
               "default":{
                  "description":"Unexpected error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Error"
                        }
                     }
                  }
               },
               "201":{
                  "description":"Assessment Pin Image object",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/roof.AssessmentPinImage"
                        }
                     }
                  }
               }
            }
         }
      },
      "/assessment-pin-images/{id}/":{
         "delete":{
            "tags":[
               "Roof"
            ],
            "summary":"Delete AssessmentPinImage by id.",
            "description":"Deletes one specific AssessmentPinImage.",
            "operationId":"removeRoofAssessmentPinImage",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"ID of AssessmentPinImage that should be deleted.",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               }
            ],
            "responses":{
               "default":{
                  "description":"Unexpected error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Error"
                        }
                     }
                  }
               }
            }
         }
      },
      "/roof-assessment-pin-images/{id}/":{
         "put":{
            "tags":[
               "Roof"
            ],
            "summary":"update roofAssessmentPinImage with overlay",
            "description":"",
            "operationId":"updateWithOverlayRoofAssessmentPinImage",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"roofAssessmentPinImage where the overlay will be created for",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               }
            ],
            "responses":{
               "default":{
                  "description":"Unexpected error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Error"
                        }
                     }
                  }
               },
               "201":{
                  "description":"roofAssessmentPinImage with updated value for overlayUrl",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/roof.AssessmentPinImage"
                        }
                     }
                  }
               },
               "404":{
                  "description":"roofAssessmentPinImage not found"
               }
            }
         }
      },
      "/allocations/{id}/roof-component-images/":{
         "get":{
            "tags":[
               "Roof"
            ],
            "summary":"Provides all roof-component-images of an allocation.",
            "description":"Provides all roof-component-images of an allocation.",
            "operationId":"getAllByAllocationRoofComponentImage",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"allocation id",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               },
               {
                  "name":"maxResults",
                  "in":"query",
                  "description":"Number of results that should be returned.",
                  "required":false,
                  "schema":{
                     "type":"integer",
                     "format":"int32",
                     "default":100
                  }
               },
               {
                  "name":"page",
                  "in":"query",
                  "description":"Current Page number",
                  "required":false,
                  "schema":{
                     "type":"integer",
                     "format":"int32",
                     "default":0
                  }
               }
            ],
            "responses":{
               "default":{
                  "description":"Unexpected error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Error"
                        }
                     }
                  }
               },
               "200":{
                  "description":"",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"array",
                           "nullable":false,
                           "items":{
                              "$ref":"#/components/schemas/roof.ComponentImage"
                           }
                        }
                     }
                  }
               },
               "404":{
                  "description":"Not found!"
               }
            }
         },
         "post":{
            "tags":[
               "Roof"
            ],
            "summary":"Create RoofComponentImage",
            "description":"Creates a new RoofComponentImage object",
            "operationId":"createRoofComponentImage",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               }
            ],
            "responses":{
               "default":{
                  "description":"Unexpected error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Error"
                        }
                     }
                  }
               },
               "201":{
                  "description":"The created RoofComponentImage",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/roof.ComponentImage"
                        }
                     }
                  }
               }
            }
         }
      },
      "/roof-component-images/{roofComponentImageId}/":{
         "delete":{
            "tags":[
               "Roof"
            ],
            "summary":"Delete RoofComponentImage by id.",
            "description":"Deletes one specific RoofComponentImage.",
            "operationId":"removeRoofComponentImage",
            "parameters":[
               {
                  "name":"roofComponentImageId",
                  "in":"path",
                  "description":"ID of RoofComponentImage that should be deleted.",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               }
            ],
            "responses":{
               "default":{
                  "description":"Unexpected error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Error"
                        }
                     }
                  }
               }
            }
         }
      },
      "/image-counts/":{
         "get":{
            "tags":[
               "Roof"
            ],
            "summary":"Gets the image count and an image url of either an assessment image or assessment pin image per allocation",
            "description":"Gets the image count and an image url of either an assessment image or assessment pin image per allocation",
            "operationId":"imageCountByAllocationIdsRoofImageCount",
            "parameters":[
               {
                  "name":"ids",
                  "in":"query",
                  "description":"The ids of the allocation",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               }
            ],
            "responses":{
               "default":{
                  "description":"Unexpected error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Error"
                        }
                     }
                  }
               },
               "200":{
                  "description":"The image counts of the allocation ids",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"array",
                           "nullable":false,
                           "items":{
                              "$ref":"#/components/schemas/roof.ImageCount"
                           }
                        }
                     }
                  }
               }
            }
         }
      },
      "/roof-assessments/{id}/signatures/":{
         "get":{
            "tags":[
               "Signature"
            ],
            "summary":"",
            "description":"",
            "operationId":"getByRoofAssessmentSignatureSignature",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"id of the roofAssessment",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               }
            ],
            "responses":{
               "default":{
                  "description":"Unexpected error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Error"
                        }
                     }
                  }
               },
               "200":{
                  "description":"",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/signature.Signature"
                        }
                     }
                  }
               }
            }
         }
      },
      "/signatures/":{
         "post":{
            "tags":[
               "Signature"
            ],
            "summary":"",
            "description":"",
            "operationId":"createSignatureSignature",
            "parameters":[
               
            ],
            "responses":{
               "default":{
                  "description":"Unexpected error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Error"
                        }
                     }
                  }
               },
               "200":{
                  "description":"",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/signature.Signature"
                        }
                     }
                  }
               }
            }
         }
      },
      "/signatures/{id}/":{
         "delete":{
            "tags":[
               "Signature"
            ],
            "summary":"Delete Signature by id.",
            "description":"Deletes one specific Signature.",
            "operationId":"removeSignatureSignature",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"ID of Signature that should be deleted.",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int64"
                  }
               }
            ],
            "responses":{
               "default":{
                  "description":"Unexpected error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Error"
                        }
                     }
                  }
               },
               "200":{
                  "description":"success"
               }
            }
         }
      }
   },
   "components":{
      "schemas":{
         "allocation.Allocation":{
            "title":"Allocation",
            "required":[
               "buildingAge",
               "compassOrientation",
               "createdAt",
               "maxX",
               "maxY",
               "name",
               "numberOfModules",
               "projectId",
               "restrictedArea",
               "roofMaterial",
               "roofShape",
               "rotation",
               "scale",
               "systemOutput",
               "totalArea",
               "zoomLevel"
            ],
            "properties":{
               "projectId":{
                  "title":"projectId",
                  "type":"integer",
                  "description":"The id of the project this Allocation belongs to",
                  "format":"int64",
                  "nullable":false,
                  "readOnly":false
               },
               "roofShape":{
                  "title":"roofShape",
                  "type":"integer",
                  "description":"The roof shape the Allocation represents. Determines the kind of roof technicians will document in the MVT App",
                  "format":"int32",
                  "nullable":false,
                  "readOnly":false
               },
               "name":{
                  "title":"name",
                  "maxLength":100,
                  "type":"string",
                  "description":"The name of the Allocation",
                  "nullable":false,
                  "readOnly":false,
                  "example":""
               },
               "scale":{
                  "title":"scale",
                  "type":"integer",
                  "description":"The scale is the conversion factor that translates pixels to meters",
                  "format":"",
                  "nullable":false,
                  "readOnly":false
               },
               "maxX":{
                  "title":"maxX",
                  "type":"integer",
                  "description":"The bottom-right X value of the max coordinate point in the Allocation image  coordinate plane.",
                  "format":"",
                  "nullable":false,
                  "readOnly":false
               },
               "rotation":{
                  "title":"rotation",
                  "type":"integer",
                  "description":"The rotation of the Allocation against the coordinate plane",
                  "format":"",
                  "nullable":false,
                  "readOnly":false
               },
               "buildingAge":{
                  "title":"buildingAge",
                  "type":"integer",
                  "description":"The age of the building the Allocation represents",
                  "format":"int32",
                  "nullable":false,
                  "readOnly":false
               },
               "numberOfModules":{
                  "title":"numberOfModules",
                  "type":"integer",
                  "description":"The estimated number of modules to be installed in the usable zones of the Allocation",
                  "format":"int32",
                  "nullable":false,
                  "readOnly":false
               },
               "latitude":{
                  "title":"latitude",
                  "type":"integer",
                  "description":"The latitude of the annotation for the allocation. Expires in 30 days after the creation of this Allocation",
                  "format":"",
                  "nullable":true,
                  "readOnly":false
               },
               "longitude":{
                  "title":"longitude",
                  "type":"integer",
                  "description":"The longitude of the allocation. Expires in 30 days after the creation of this Allocation",
                  "format":"",
                  "nullable":true,
                  "readOnly":false
               },
               "createdAt":{
                  "title":"createdAt",
                  "type":"string",
                  "description":"The date the Allocation was created. Created to the 30 days expiration of storing latitude and longitude values as outlined by the Google Maps terms and conditions. The date format is dd-mm-yyyy.",
                  "nullable":false,
                  "readOnly":false,
                  "example":""
               },
               "maxY":{
                  "title":"maxY",
                  "type":"integer",
                  "description":"The bottom-right Y value of the max coordinate point in the Allocation image  coordinate plane.",
                  "format":"",
                  "nullable":false,
                  "readOnly":false
               },
               "zoomLevel":{
                  "title":"zoomLevel",
                  "type":"integer",
                  "description":"",
                  "format":"int32",
                  "nullable":false,
                  "readOnly":false
               },
               "sketch":{
                  "title":"sketch",
                  "maxLength":255,
                  "type":"string",
                  "description":"url to the sketch image",
                  "nullable":true,
                  "readOnly":false,
                  "example":""
               },
               "compassOrientation":{
                  "title":"compassOrientation",
                  "type":"integer",
                  "description":"CompassOrientation in radiant. &amp;#039;0&amp;#039; is north. Orientation goes clockwise.",
                  "format":"",
                  "nullable":false,
                  "readOnly":false
               },
               "totalArea":{
                  "title":"totalArea",
                  "type":"integer",
                  "description":"totalArea",
                  "format":"",
                  "nullable":false,
                  "readOnly":false
               },
               "restrictedArea":{
                  "title":"restrictedArea",
                  "type":"integer",
                  "description":"restricted area",
                  "format":"",
                  "nullable":false,
                  "readOnly":false
               },
               "usableArea":{
                  "title":"usableArea",
                  "type":"integer",
                  "description":"usable area",
                  "format":"",
                  "nullable":true,
                  "readOnly":false
               },
               "systemOutput":{
                  "title":"systemOutput",
                  "type":"integer",
                  "description":"systemOutput of the allocation",
                  "format":"",
                  "nullable":false,
                  "readOnly":false
               },
               "roofAngle":{
                  "title":"roofAngle",
                  "type":"integer",
                  "description":"angle of a roof",
                  "format":"",
                  "nullable":true,
                  "readOnly":false
               },
               "roofMaterial":{
                  "title":"roofMaterial",
                  "type":"integer",
                  "description":"material used in the roof",
                  "format":"int32",
                  "nullable":false,
                  "readOnly":false,
                  "example":0
               },
               "id":{
                  "type":"integer",
                  "format":"int64"
               },
               "image":{
                  "$ref":"#/components/schemas/allocation.Image"
               },
               "mapImage":{
                  "$ref":"#/components/schemas/allocation.MapImage"
               },
               "allocationCoordinates":{
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/allocation.Coordinate"
                  }
               },
               "zones":{
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/allocation.Zone"
                  }
               },
               "assessmentImages":{
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/roof.AssessmentImage"
                  }
               },
               "componentImages":{
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/roof.ComponentImage"
                  }
               },
               "roofRidge":{
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/allocation.Coordinate"
                  }
               }
            },
            "description":"An allocation is the outline of a roof top that contains approximate measurements and details about the roof it represents"
         },
         "allocation.Coordinate":{
            "title":"Coordinate",
            "required":[
               "x",
               "y"
            ],
            "properties":{
               "x":{
                  "title":"x",
                  "type":"integer",
                  "description":"The y coordinate of a vertex in an Allocation or Zone",
                  "format":"",
                  "nullable":false,
                  "readOnly":false
               },
               "y":{
                  "title":"y",
                  "type":"integer",
                  "description":"The y coordinate of a vertex in an Allocation or Zone",
                  "format":"",
                  "nullable":false,
                  "readOnly":false
               },
               "allocationCoordinates":{
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/allocation.Allocation"
                  }
               },
               "zoneCoordinates":{
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/allocation.Zone"
                  }
               },
               "roofRidge":{
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/allocation.Allocation"
                  }
               }
            },
            "description":"A Coordinate of an Allocation or Zone&#039;s border"
         },
         "allocation.Existence":{
            "title":"Existence",
            "required":[
               "allocationsExist",
               "projectId"
            ],
            "properties":{
               "allocationsExist":{
                  "title":"allocationsExist",
                  "type":"boolean",
                  "description":"",
                  "nullable":false,
                  "readOnly":false,
                  "example":false
               },
               "projectId":{
                  "title":"projectId",
                  "type":"integer",
                  "description":"",
                  "format":"int64",
                  "nullable":false,
                  "readOnly":false
               }
            },
            "description":""
         },
         "allocation.Image":{
            "title":"Image",
            "required":[
               "imageURL",
               "thumbnailURL"
            ],
            "properties":{
               "imageURL":{
                  "title":"imageURL",
                  "maxLength":255,
                  "type":"string",
                  "description":"The URL of the image of the Allocation",
                  "nullable":false,
                  "readOnly":false,
                  "example":""
               },
               "thumbnailURL":{
                  "title":"thumbnailURL",
                  "maxLength":255,
                  "type":"string",
                  "description":"The URL of the thumbnail image of the Allocation",
                  "nullable":false,
                  "readOnly":false,
                  "example":""
               },
               "id":{
                  "type":"integer",
                  "format":"int64"
               },
               "allocation":{
                  "$ref":"#/components/schemas/allocation.Allocation"
               }
            },
            "description":"The image of an AllocationAllocation"
         },
         "allocation.MapImage":{
            "title":"MapImage",
            "required":[
               "imageUrl",
               "thumbnailUrl"
            ],
            "properties":{
               "imageUrl":{
                  "title":"imageUrl",
                  "maxLength":255,
                  "type":"string",
                  "description":"",
                  "nullable":false,
                  "readOnly":false,
                  "example":"http://example.com"
               },
               "thumbnailUrl":{
                  "title":"thumbnailUrl",
                  "maxLength":255,
                  "type":"string",
                  "description":"",
                  "nullable":false,
                  "readOnly":false,
                  "example":"http://example.com"
               },
               "id":{
                  "type":"integer",
                  "format":"int64"
               },
               "allocation":{
                  "$ref":"#/components/schemas/allocation.Allocation"
               }
            },
            "description":""
         },
         "allocation.Plan":{
            "title":"Plan",
            "required":[
               "pdfUrl",
               "thumbnailUrl",
               "type"
            ],
            "properties":{
               "pdfUrl":{
                  "title":"pdfUrl",
                  "maxLength":255,
                  "type":"string",
                  "description":"Url to the pdf file.",
                  "nullable":false,
                  "readOnly":false,
                  "example":"http://example.com"
               },
               "type":{
                  "title":"type",
                  "type":"integer",
                  "description":"Plan enum [PLAN_ROOF , PLAN_STRING , PLAN_BALLAST , PLAN_PROFIL , PLAN_OTHER ]",
                  "format":"int32",
                  "nullable":false,
                  "readOnly":false,
                  "example":1,
                  "default":0
               },
               "thumbnailUrl":{
                  "title":"thumbnailUrl",
                  "maxLength":255,
                  "type":"string",
                  "description":"Url to thumbnail.",
                  "nullable":false,
                  "readOnly":false,
                  "example":"http://example.com"
               },
               "title":{
                  "title":"title",
                  "maxLength":100,
                  "type":"string",
                  "description":"Title of RoofPlan, is only required if type is PLAN_OTHER.",
                  "nullable":true,
                  "readOnly":false,
                  "example":"Some RoofPlan"
               },
               "id":{
                  "type":"integer",
                  "format":"int64"
               },
               "allocation":{
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/allocation.Allocation"
                  }
               }
            },
            "description":"A PDF plan of an allocation."
         },
         "allocation.Zone":{
            "title":"Zone",
            "required":[
               "useable"
            ],
            "properties":{
               "useable":{
                  "title":"useable",
                  "type":"boolean",
                  "description":"A boolean indicating whether a module can be place in the Zone",
                  "nullable":false,
                  "readOnly":false,
                  "example":false,
                  "default":false
               },
               "id":{
                  "type":"integer",
                  "format":"int64"
               },
               "zoneCoordinates":{
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/allocation.Coordinate"
                  }
               },
               "allocation":{
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/allocation.Allocation"
                  }
               }
            },
            "description":"A zone is a designated area in an Allocation. Zones can only be rectangles"
         },
         "externalinfo.Roof":{
            "title":"Roof",
            "required":[
               "imageCount",
               "projectId",
               "sketchCount"
            ],
            "properties":{
               "projectId":{
                  "title":"projectId",
                  "type":"integer",
                  "description":"The id of the project",
                  "format":"int64",
                  "nullable":false,
                  "readOnly":false
               },
               "imageUrl":{
                  "title":"imageUrl",
                  "type":"string",
                  "description":"The url of the latest image",
                  "nullable":true,
                  "readOnly":false,
                  "example":"",
                  "maxLength":255
               },
               "imageCount":{
                  "title":"imageCount",
                  "type":"integer",
                  "description":"The number of images associated with the project",
                  "format":"int32",
                  "nullable":false,
                  "readOnly":false
               },
               "sketchCount":{
                  "title":"sketchCount",
                  "type":"integer",
                  "description":"The number of sketches associated with the project",
                  "format":"int32",
                  "nullable":false,
                  "readOnly":false
               }
            },
            "description":"Contains all the roof data info required by the Projects API"
         },
         "generator.Rectangle":{
            "title":"Rectangle",
            "required":[
               "length",
               "width",
               "x",
               "y"
            ],
            "properties":{
               "length":{
                  "title":"length",
                  "type":"integer",
                  "description":"The length of Rectangle. Defined along the y-axis",
                  "format":"",
                  "nullable":false,
                  "readOnly":false
               },
               "width":{
                  "title":"width",
                  "type":"integer",
                  "description":"The width of the Rectangle. Defined along the x axis",
                  "format":"",
                  "nullable":false,
                  "readOnly":false
               },
               "x":{
                  "title":"x",
                  "type":"integer",
                  "description":"The x coordinate of the Rectangle origin",
                  "format":"",
                  "nullable":false,
                  "readOnly":false
               },
               "y":{
                  "title":"y",
                  "type":"integer",
                  "description":"The y coordinate of the Rectangle origin",
                  "format":"",
                  "nullable":false,
                  "readOnly":false
               }
            },
            "description":"A Rectangle represents a possible area in a flat roof where modules can be laid out"
         },
         "generator.RoofArea":{
            "title":"RoofArea",
            "required":[
               "area",
               "roofShape"
            ],
            "properties":{
               "area":{
                  "title":"area",
                  "type":"integer",
                  "description":"area use to draw a square",
                  "format":"",
                  "nullable":false,
                  "readOnly":false
               },
               "numberOfModules":{
                  "title":"numberOfModules",
                  "type":"integer",
                  "description":"",
                  "format":"int32",
                  "nullable":true,
                  "readOnly":false,
                  "example":23
               },
               "roofShape":{
                  "title":"roofShape",
                  "type":"integer",
                  "description":"SADDLE\nPENT\nFLAT",
                  "format":"int32",
                  "nullable":false,
                  "readOnly":false,
                  "example":0
               }
            },
            "description":""
         },
         "generator.Validation":{
            "title":"Validation",
            "required":[
               "orientation"
            ],
            "properties":{
               "orientation":{
                  "title":"orientation",
                  "type":"integer",
                  "description":"The orientation of the solar panel layout. Horizontal is 0 and Vertical is 1.",
                  "format":"int32",
                  "nullable":false,
                  "readOnly":false
               },
               "allocation":{
                  "$ref":"#/components/schemas/allocation.Allocation"
               },
               "rect":{
                  "$ref":"#/components/schemas/generator.Rectangle"
               }
            },
            "description":""
         },
         "generator.ZoneInput":{
            "title":"ZoneInput",
            "required":[
               "orientation"
            ],
            "properties":{
               "orientation":{
                  "title":"orientation",
                  "type":"integer",
                  "description":"The orientation of the solar panel layout. Horizontal is 0 and Vertical is 1.",
                  "format":"int32",
                  "nullable":false,
                  "readOnly":false
               },
               "allocation":{
                  "$ref":"#/components/schemas/allocation.Allocation"
               }
            },
            "description":"An intermediary entity that contains an Allocation and the orientation used for the solar panel layout"
         },
         "report.Report":{
            "title":"Report",
            "required":[
               "projectId",
               "text",
               "type"
            ],
            "properties":{
               "type":{
                  "title":"type",
                  "type":"integer",
                  "description":"type of report",
                  "format":"int32",
                  "nullable":false,
                  "readOnly":false,
                  "example":0,
                  "default":0
               },
               "text":{
                  "title":"text",
                  "maxLength":1000,
                  "type":"string",
                  "description":"report or known damage description",
                  "nullable":false,
                  "readOnly":false,
                  "example":"damage"
               },
               "projectId":{
                  "title":"projectId",
                  "type":"integer",
                  "description":"id of the project",
                  "format":"int64",
                  "nullable":false,
                  "readOnly":false,
                  "example":1
               },
               "id":{
                  "type":"integer",
                  "format":"int64"
               },
               "roofAssessment":{
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/roof.Assessment"
                  }
               }
            },
            "description":"entity for Comments and Known Damages"
         },
         "roof.Assessment":{
            "title":"Assessment",
            "required":[
               "eavesHeight",
               "existingPVSystemAvailable",
               "lightningProtected",
               "materialStoragePossible",
               "roofPitch",
               "scaffoldingOnSite",
               "stackerAvailable",
               "toiletUsePossible"
            ],
            "properties":{
               "roofPitch":{
                  "title":"roofPitch",
                  "type":"integer",
                  "description":"Represents the steepness of a roof in degrees",
                  "format":"",
                  "nullable":false,
                  "readOnly":false
               },
               "eavesHeight":{
                  "title":"eavesHeight",
                  "type":"integer",
                  "description":"The height of the edge of the roof in meters",
                  "format":"",
                  "nullable":false,
                  "readOnly":false
               },
               "lightningProtected":{
                  "title":"lightningProtected",
                  "type":"boolean",
                  "description":"Determines whether or not the roof has lightning protection",
                  "nullable":false,
                  "readOnly":false,
                  "example":false
               },
               "stackerAvailable":{
                  "title":"stackerAvailable",
                  "type":"boolean",
                  "description":"Determines whether or not a stacker is available at the construction site",
                  "nullable":false,
                  "readOnly":false,
                  "example":false,
                  "default":false
               },
               "numberCraneOne":{
                  "title":"numberCraneOne",
                  "type":"integer",
                  "description":"The number of cranes of this type needed at the construction site",
                  "format":"int32",
                  "nullable":true,
                  "readOnly":false
               },
               "numberCraneTwo":{
                  "title":"numberCraneTwo",
                  "type":"integer",
                  "description":"The number of cranes of this type needed at the construction site",
                  "format":"int32",
                  "nullable":true,
                  "readOnly":false
               },
               "materialStoragePossible":{
                  "title":"materialStoragePossible",
                  "type":"boolean",
                  "description":"Determines whether or not materials can be stored at the construction site",
                  "nullable":false,
                  "readOnly":false,
                  "example":false,
                  "default":false
               },
               "toiletUsePossible":{
                  "title":"toiletUsePossible",
                  "type":"boolean",
                  "description":"Determines whether or not a temporary toilet can be installed at the construction site",
                  "nullable":false,
                  "readOnly":false,
                  "example":false,
                  "default":false
               },
               "scaffoldingOnSite":{
                  "title":"scaffoldingOnSite",
                  "type":"boolean",
                  "description":"Determines whether or not a scaffolding is at the construction site",
                  "nullable":false,
                  "readOnly":false,
                  "example":false,
                  "default":false
               },
               "stairTowerHeight":{
                  "title":"stairTowerHeight",
                  "type":"integer",
                  "description":"The height of the stair tower (in meters) at the construction site",
                  "format":"",
                  "nullable":true,
                  "readOnly":false
               },
               "facadeScaffoldingArea":{
                  "title":"facadeScaffoldingArea",
                  "type":"integer",
                  "description":"The area of the facade scaffolding (in meters squared) at the construction site",
                  "format":"",
                  "nullable":true,
                  "readOnly":false
               },
               "atticFrameHeight":{
                  "title":"atticFrameHeight",
                  "type":"integer",
                  "description":"The height of the attic frame",
                  "format":"",
                  "nullable":true,
                  "readOnly":false
               },
               "barrierWidth":{
                  "title":"barrierWidth",
                  "type":"integer",
                  "description":"The width of the barrier",
                  "format":"",
                  "nullable":true,
                  "readOnly":false
               },
               "fallProtectionMetalSheetWidth":{
                  "title":"fallProtectionMetalSheetWidth",
                  "type":"integer",
                  "description":"The width of the fall protection sheet metal",
                  "format":"",
                  "nullable":true,
                  "readOnly":false
               },
               "buildingFence":{
                  "title":"buildingFence",
                  "type":"integer",
                  "description":"",
                  "format":"",
                  "nullable":true,
                  "readOnly":false
               },
               "existingPVSystemAvailable":{
                  "title":"existingPVSystemAvailable",
                  "type":"boolean",
                  "description":"Boolean indicating if an existing solar panel system is installed",
                  "nullable":false,
                  "readOnly":false,
                  "example":false,
                  "default":false
               },
               "id":{
                  "type":"integer",
                  "format":"int64"
               },
               "allocation":{
                  "$ref":"#/components/schemas/allocation.Allocation"
               },
               "brickRoof":{
                  "$ref":"#/components/schemas/roof.BrickRoof"
               },
               "flatRoof":{
                  "$ref":"#/components/schemas/roof.FlatRoof"
               },
               "sheetMetalRoof":{
                  "$ref":"#/components/schemas/roof.SheetMetalRoof"
               }
            },
            "description":"An Assessment contains information about the roof a technician is surveying.\nIt contains information such as measurements and material type about one area on the roof. Different kinds of roofs have different attributes that must be documented. This entity will contain optional relationships to those other entities."
         },
         "roof.AssessmentImage":{
            "title":"AssessmentImage",
            "required":[
               "thumbnailUrl",
               "type",
               "url"
            ],
            "properties":{
               "url":{
                  "title":"url",
                  "maxLength":255,
                  "type":"string",
                  "description":"Url to the image file.",
                  "nullable":false,
                  "readOnly":false,
                  "example":"http://example.com"
               },
               "type":{
                  "title":"type",
                  "type":"integer",
                  "description":"",
                  "format":"int32",
                  "nullable":false,
                  "readOnly":false,
                  "example":1,
                  "default":1
               },
               "thumbnailUrl":{
                  "title":"thumbnailUrl",
                  "maxLength":255,
                  "type":"string",
                  "description":"",
                  "nullable":false,
                  "readOnly":false,
                  "example":"http://example.com"
               },
               "overlayUrl":{
                  "title":"overlayUrl",
                  "maxLength":255,
                  "type":"string",
                  "description":"overlay image for roof assessment image",
                  "nullable":true,
                  "readOnly":false,
                  "example":"overlay.jpg"
               },
               "id":{
                  "type":"integer",
                  "format":"int64"
               },
               "allocation":{
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/allocation.Allocation"
                  }
               }
            },
            "description":"An assessment_images of an allocation."
         },
         "roof.AssessmentPinImage":{
            "title":"AssessmentPinImage",
            "required":[
               "category",
               "thumbnailUrl",
               "url",
               "x",
               "y"
            ],
            "properties":{
               "x":{
                  "title":"x",
                  "type":"integer",
                  "description":"the x origin of the pin",
                  "format":"",
                  "nullable":false,
                  "readOnly":false
               },
               "y":{
                  "title":"y",
                  "type":"integer",
                  "description":"the y origin of the pin",
                  "format":"",
                  "nullable":false,
                  "readOnly":false
               },
               "url":{
                  "title":"url",
                  "maxLength":255,
                  "type":"string",
                  "description":"url of the image",
                  "nullable":false,
                  "readOnly":false,
                  "example":"url of the image"
               },
               "thumbnailUrl":{
                  "title":"thumbnailUrl",
                  "maxLength":255,
                  "type":"string",
                  "description":"thumbnailUrl of the image",
                  "nullable":false,
                  "readOnly":false,
                  "example":"thumbnailUrl of the image"
               },
               "overlayUrl":{
                  "title":"overlayUrl",
                  "maxLength":255,
                  "type":"string",
                  "description":"url of the overlay",
                  "nullable":true,
                  "readOnly":false,
                  "example":"url of the overlay"
               },
               "category":{
                  "title":"category",
                  "type":"integer",
                  "description":"",
                  "format":"int32",
                  "nullable":false,
                  "readOnly":false,
                  "example":1,
                  "default":1
               },
               "id":{
                  "type":"integer",
                  "format":"int64"
               },
               "allocation":{
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/allocation.Allocation"
                  }
               }
            },
            "description":"entity to save pin and and add image and overlay image"
         },
         "roof.BrickRoof":{
            "title":"BrickRoof",
            "required":[
               "deckHeight",
               "deckWidth",
               "hasRoofMountedInsulation",
               "hasStormGrouting",
               "rafterSpacing",
               "rafterWidth",
               "roofInsulationThickness",
               "roofingType"
            ],
            "properties":{
               "roofingType":{
                  "title":"roofingType",
                  "type":"integer",
                  "description":"The type of roofing used in this roof. Can either be CONCRETE, CLAY or PLAIN_TILE",
                  "format":"int32",
                  "nullable":false,
                  "readOnly":false
               },
               "manufacturer":{
                  "title":"manufacturer",
                  "type":"string",
                  "description":"The manufacturer of the roofing",
                  "nullable":true,
                  "readOnly":false,
                  "example":""
               },
               "brickType":{
                  "title":"brickType",
                  "type":"string",
                  "description":"The type of brick used for this roof",
                  "nullable":true,
                  "readOnly":false,
                  "example":""
               },
               "hasStormGrouting":{
                  "title":"hasStormGrouting",
                  "type":"boolean",
                  "description":"Determines whether the roof has storm grouting or not",
                  "nullable":false,
                  "readOnly":false,
                  "example":false,
                  "default":false
               },
               "deckWidth":{
                  "title":"deckWidth",
                  "type":"integer",
                  "description":"The width dimension of the roof deck in centimeters",
                  "format":"",
                  "nullable":false,
                  "readOnly":false
               },
               "deckHeight":{
                  "title":"deckHeight",
                  "type":"integer",
                  "description":"The height dimension of the roof deck in centimeters",
                  "format":"",
                  "nullable":false,
                  "readOnly":false
               },
               "rafterSpacing":{
                  "title":"rafterSpacing",
                  "type":"integer",
                  "description":"The spacing between the rafters in centimeters",
                  "format":"",
                  "nullable":false,
                  "readOnly":false
               },
               "rafterWidth":{
                  "title":"rafterWidth",
                  "type":"integer",
                  "description":"The width of the rafters in centimeters",
                  "format":"",
                  "nullable":false,
                  "readOnly":false
               },
               "hasRoofMountedInsulation":{
                  "title":"hasRoofMountedInsulation",
                  "type":"boolean",
                  "description":"Indicates if the roof has insulation",
                  "nullable":false,
                  "readOnly":false,
                  "example":false,
                  "default":false
               },
               "roofInsulationThickness":{
                  "title":"roofInsulationThickness",
                  "type":"integer",
                  "description":"The thickness of the roof insulation in centimeters",
                  "format":"",
                  "nullable":false,
                  "readOnly":false
               },
               "id":{
                  "type":"integer",
                  "format":"int64"
               }
            },
            "description":"Represents documentation specific to brick roofs"
         },
         "roof.ComponentImage":{
            "title":"ComponentImage",
            "required":[
               "thumbnailUrl",
               "url"
            ],
            "properties":{
               "url":{
                  "title":"url",
                  "type":"string",
                  "description":"The URL to the image",
                  "nullable":false,
                  "readOnly":false,
                  "example":""
               },
               "thumbnailUrl":{
                  "title":"thumbnailUrl",
                  "maxLength":255,
                  "type":"string",
                  "description":"",
                  "nullable":false,
                  "readOnly":false,
                  "example":""
               },
               "id":{
                  "type":"integer",
                  "format":"int64"
               },
               "allocation":{
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/allocation.Allocation"
                  }
               }
            },
            "description":"The image associated with the Component"
         },
         "roof.FlatRoof":{
            "title":"FlatRoof",
            "required":[
               "parapetHeight",
               "roofing"
            ],
            "properties":{
               "roofing":{
                  "title":"roofing",
                  "type":"integer",
                  "description":"The type of roofing used. Can be FOIL, GRAVEL, or BITUMEN",
                  "format":"int32",
                  "nullable":false,
                  "readOnly":false
               },
               "parapetHeight":{
                  "title":"parapetHeight",
                  "type":"integer",
                  "description":"The height of the parapet in centimeters",
                  "format":"",
                  "nullable":false,
                  "readOnly":false
               },
               "id":{
                  "type":"integer",
                  "format":"int64"
               }
            },
            "description":"Represents documentation specific to flat roofs"
         },
         "roof.ImageCount":{
            "title":"ImageCount",
            "required":[
               "count"
            ],
            "properties":{
               "count":{
                  "title":"count",
                  "type":"integer",
                  "description":"The number of assessment images and assessment pin images",
                  "format":"int64",
                  "nullable":false,
                  "readOnly":false,
                  "default":0
               },
               "imageUrl":{
                  "title":"imageUrl",
                  "maxLength":255,
                  "type":"string",
                  "description":"Image Url of the latest image",
                  "nullable":true,
                  "readOnly":false,
                  "example":""
               }
            },
            "description":"A DTO that enumerates the number of assessment images and assessment pin images"
         },
         "roof.SheetMetalRoof":{
            "title":"SheetMetalRoof",
            "required":[
               "beadSpacing",
               "beadWidth",
               "material",
               "sheetThickness"
            ],
            "properties":{
               "material":{
                  "title":"material",
                  "type":"integer",
                  "description":"The material the roof is made of. Can be ALUMINIUM (1) or STEEL (2)",
                  "format":"int32",
                  "nullable":false,
                  "readOnly":false
               },
               "sheetThickness":{
                  "title":"sheetThickness",
                  "type":"integer",
                  "description":"The thickness of the sheet metal in millimeters",
                  "format":"",
                  "nullable":false,
                  "readOnly":false
               },
               "beadSpacing":{
                  "title":"beadSpacing",
                  "type":"integer",
                  "description":"The bead spacing in centimeters",
                  "format":"",
                  "nullable":false,
                  "readOnly":false
               },
               "beadWidth":{
                  "title":"beadWidth",
                  "type":"integer",
                  "description":"The bead width in centimeters",
                  "format":"",
                  "nullable":false,
                  "readOnly":false
               },
               "id":{
                  "type":"integer",
                  "format":"int64"
               }
            },
            "description":"Represents documentation specific to trapezoidal sheet metal roofs"
         },
         "signature.Signature":{
            "title":"Signature",
            "required":[
               "contactPersonId",
               "date",
               "place",
               "url"
            ],
            "properties":{
               "contactPersonId":{
                  "title":"contactPersonId",
                  "type":"integer",
                  "description":"id of the signatory",
                  "format":"int64",
                  "nullable":false,
                  "readOnly":false,
                  "example":1
               },
               "comment":{
                  "title":"comment",
                  "maxLength":1000,
                  "type":"string",
                  "description":"comment of the signatory",
                  "nullable":true,
                  "readOnly":false,
                  "example":"sample comment"
               },
               "date":{
                  "title":"date",
                  "type":"string",
                  "description":"date of signing",
                  "nullable":false,
                  "readOnly":false,
                  "example":""
               },
               "place":{
                  "title":"place",
                  "maxLength":150,
                  "type":"string",
                  "description":"place where signed",
                  "nullable":false,
                  "readOnly":false,
                  "example":"place"
               },
               "url":{
                  "title":"url",
                  "maxLength":255,
                  "type":"string",
                  "description":"url of the signature image",
                  "nullable":false,
                  "readOnly":false,
                  "example":"url"
               },
               "id":{
                  "type":"integer",
                  "format":"int64"
               },
               "roofAssessment":{
                  "$ref":"#/components/schemas/roof.Assessment"
               }
            },
            "description":"signature to confirm that reports are noted"
         },
         "Error":{
            "type":"object",
            "properties":{
               "timestamp":{
                  "type":"string",
                  "format":"date-time"
               },
               "path":{
                  "type":"string"
               },
               "status":{
                  "type":"integer",
                  "format":"int32"
               },
               "error":{
                  "type":"string"
               },
               "message":{
                  "type":"string"
               }
            }
         }
      },
      "securitySchemes":{
         "openIdConnect":{
            "type":"openIdConnect",
            "in":"header",
            "openIdConnectUrl":"https://api.ezeeroofdataClient/auth/auth/realms/pass"
         }
      }
   },
   "x-tagGroups":[
      {
         "name":"Allocation",
         "tags":[
            "Allocation"
         ]
      },
      {
         "name":"Externalinfo",
         "tags":[
            "Externalinfo"
         ]
      },
      {
         "name":"Generator",
         "tags":[
            "Generator"
         ]
      },
      {
         "name":"Report",
         "tags":[
            "Report"
         ]
      },
      {
         "name":"Roof",
         "tags":[
            "Roof"
         ]
      },
      {
         "name":"Signature",
         "tags":[
            "Signature"
         ]
      }
   ]
}
